---
- name: Create temporary directory
  file:
    path: "{{ temp_dir }}"
    recurse: yes
    mode: 0755
    state: directory

- name: Copy installer
  copy:
    src: "{{ db2_installer_path }}"
    dest: "{{ temp_dir }}/db2_installer.tar.gz"
  when: download_url is not defined
  register: db2_installer

- name: Download installer
  get_url:
    url: "{{ download_url }}/{{ db2_installer_path }}"
    dest: "{{ temp_dir }}/db2_installer.tar.gz"
    headers: "{{ download_header }}"
  when: download_url is defined
  register: db2_installer

- name: Create tmp directory
  file:
    path: /tmp/DB2Installer
    state: directory
  register: installer_dir

- name: Extract installer
  unarchive:
    src: "{{ db2_installer.dest }}"
    dest: "{{ installer_dir.path }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1
  when: db2_installer.changed

- name: Check prereqs
  command: "{{ installer_dir.path }}/db2prereqcheck -i -v {{ db2_version }}"
  when:
    - not db2_bypass_prereq_check
    - db2_installer.changed

- name: Render response file
  template:
    src: db2server.rsp.j2
    dest: "{{ installer_dir.path }}/db2server.rsp"
    mode: 0644

- name: Create groups
  group:
    name: "{{ item }}"
    state: present
  loop:
    - db2iadm1
    - dasadm1
    - db2fadm1

- name: Create users
  user:
    name: "{{ item.name }}"
    group: "{{ item.group }}"
    password: "{{ db2_db_password | password_hash('sha512', 'SaltyCl0ud') }}"
    expires: -1
    create_home: yes
    state: present
  loop:
    - { group: "db2iadm1", name: "{{ db2_db_username }}" }
    - { group: "dasadm1", name: "dasusr1" }
    - { group: "db2fadm1", name: "db2fenc1" }

- name: Run installer
  command: "{{ installer_dir.path }}/db2setup -r {{ installer_dir.path }}/db2server.rsp"
  register: install_job
  async: 1800
  poll: 0

- name: Check installer progress
  async_status:
    jid: "{{ install_job.ansible_job_id }}"
  until: install_result.finished
  register: install_result
  retries: 100
  delay: 30

- name: Cleanup
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ installer_dir.path }}"
    - "{{ db2_installer.dest }}"
