---
- name: Create zip directory
  file:
    path: "{{ temp_dir }}"
    state: directory

- name: Copy WAS repo
  copy:
    src: "{{ websphere_base_path }}/{{ item }}"
    dest: "{{ temp_dir }}/{{ item }}"
  loop: "{{ websphere_base_archive_list }}"
  when: download_url is not defined

- name: Download WAS repo
  get_url:
    dest: "{{ temp_dir }}/{{ item }}"
    url: "{{ download_url }}/{{ websphere_base_path }}/{{ item }}"
    headers: "{{ download_header }}"
  loop: "{{ websphere_base_archive_list }}"
  when: download_url is defined

- name: Copy Java repo
  copy:
    src: "{{ websphere_java_path }}"
    dest: "{{ temp_dir }}/java-repo.zip"
  when: download_url is not defined

- name: Download Java repo
  get_url:
    url: "{{ download_url }}/{{ websphere_java_path }}"
    dest: "{{ temp_dir }}/java-repo.zip"
    headers: "{{ download_header }}"
  when: download_url is defined

- name: Create WAS repo directories
  file:
    path: "/tmp/repo/{{ index }}"
    state: directory
  loop: "{{ websphere_base_archive_list }}"
  loop_control:
    index_var: index

- name: Create Java repo directory
  file:
    path: /tmp/repo/java
    state: directory

- name: Extract WAS installers
  unarchive:
    src: "{{ temp_dir }}/{{ item }}"
    dest: "/tmp/repo/{{ index }}"
    remote_src: yes
    creates: "/tmp/repo/{{ index }}/repository.config"
  loop: "{{ websphere_base_archive_list }}"
  loop_control:
    index_var: index

- name: Extract Java installer
  unarchive:
    src: "{{ temp_dir }}/java-repo.zip"
    dest: /tmp/repo/java
    remote_src: yes
    creates: /tmp/repo/java/repository.config

- name: Build repo list
  set_fact:
    repo_list: "{{ repo_list | default(['/tmp/repo/java']) + ['/tmp/repo/' + index|string]}}"
  loop: "{{ websphere_base_archive_list }}"
  loop_control:
    index_var: index

- name: Install WAS
  iim_package:
    iim_path: "{{ iim_install_path }}"
    product_id:
      - "{{ websphere_base_pid }}"
      - "{{ websphere_java_pid }}"
    path: "{{ websphere_install_path }}"
    repo: "{{ repo_list }}"
    state: present
  when: "iim_info.packages | select('match', 'com.ibm.websphere.ND.*') | list | length == 0"

- name: Cleanup
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/repo
    - "{{ temp_dir }}"
