---
name: Release

# Run this workflow on tag creation
on:
  push:
    tags: ['*']

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      python_ver: 3.8
      collection_namespace: ibm
      collection_name: spm_middleware

    defaults:
      run:
        working-directory: ansible_collections/${{ env.collection_namespace }}/${{ env.collection_name }}

    steps:
      - name: Checkout collection
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{ env.collection_namespace }}/${{ env.collection_name }}

      - name: Setup Python v${{ env.python_ver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_ver }}

      - name: Setup Python Cache
        uses: actions/cache@v2
        with:
          key: pip-${{ matrix.scenario }}-${{ hashFiles('ci-requirements.txt') }}
          path: |
            ~/.cache/pip
            !~/.cache/pip/log/debug.log

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r ci-requirements.txt

      - name: Prepare environment
        run: |
          mkdir -pv ~/.ansible/collections/${{ env.collection_namespace }}
          ln -s ansible_collections/${{ env.collection_namespace }}/${{ env.collection_name }} ~/.ansible/collections/${{ env.collection_namespace }}/${{ env.collection_name }}
          chmod -v +x ./scripts/*

      - name: Publish to Galaxy
        run: |
          ansible-galaxy collection build
          ls -l *.tar.gz
          ansible-galaxy collection publish -c -vvv "./${{ env.collection_namespace }}-${{ env.collection_name }}-*.tar.gz"

      - name: Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{ env.collection_namespace }}-${{ env.collection_name }}-*.tar.gz
